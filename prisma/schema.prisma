generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoomType {
  ONE_TO_ONE
  GROUP
}

enum Role {
  PARTICIPANT
  ADMIN
}

enum MessageType {
  TEXT
  FILE
}

enum MessageStatus {
  SENT
  DELIVERED
  READ
}

model User {
  id       String       @id
  username String       @unique
  rooms    RoomMember[]
  messages Message[]    @relation("SentMessages")
}

model Room {
  id            String       @id @default(uuid())
  type          RoomType     @default(ONE_TO_ONE)
  members       RoomMember[]
  messages      Message[]    @relation("Messages")
  lastMessage   Message?     @relation("LastMessage", fields: [lastMessageId], references: [id])
  lastMessageId String?
  createdAt     DateTime     @default(now())
}

model RoomMember {
  roomId String
  userId String
  role   Role   @default(PARTICIPANT)

  room Room @relation(fields: [roomId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@id([roomId, userId]) // composite PK
}

model Message {
  id                String        @id @default(cuid())
  room              Room          @relation("Messages", fields: [roomId], references: [id])
  roomLatestMessage Room[]        @relation("LastMessage")
  roomId            String
  sender            User          @relation("SentMessages", fields: [senderId], references: [id])
  senderId          String
  type              MessageType
  content           Json
  status            MessageStatus @default(SENT)
  createdAt         DateTime      @default(now())

  @@index([roomId, createdAt])
}
